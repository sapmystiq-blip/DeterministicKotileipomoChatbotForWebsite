from __future__ import annotations

from typing import List, Tuple, Optional

from .ingest import Doc
from .tokenize import tokens, normalize


def _lang_code(lang: str | None) -> str:
    ln = (lang or "fi").lower()
    if ln not in {"fi", "en", "sv"}:
        return "fi"
    return ln


def _contains(text: str, needles: List[str]) -> bool:
    return any(n in text for n in needles)


def _order_ui_block(lang: str) -> str:
    url = "https://rakaskotileipomo.fi/verkkokauppa"
    if lang == "en":
        title = "Order Online"
        sub = "Pickup in store, pay at pickup."
        btn = "Open Online Shop"
        chat = "Order in chat"
    elif lang == "sv":
        title = "Best√§ll i webbutiken"
        sub = "Avh√§mtning i butiken, betalning p√• plats."
        btn = "√ñppna webbutiken"
        chat = "Best√§ll i chatten"
    else:
        title = "Tilaa verkkokaupasta"
        sub = "Nouto myym√§l√§st√§, maksu paikan p√§√§ll√§."
        btn = "Avaa verkkokauppa"
        chat = "Tilaa chatissa"
    return (
        '<div class="order-ui">\n'
        f'  <div class="order-title">{title}</div>\n'
        f'  <div class="order-sub">{sub}</div>\n'
        '  <div class="order-buttons">\n'
        f'    <a class="btn" href="{url}" target="_blank" rel="noopener">{btn}</a>\n'
        f'    <button class="btn" data-action="start-order">{chat}</button>\n'
        '  </div>\n'
        '</div>'
    )


def _order_with_note(note: str, lang: str) -> str:
    return f"<p>{note}</p>{_order_ui_block(lang)}"


def _suggest_menu_block(lang: str) -> str:
    title = {
        "en": "Would you like to see the menu?",
        "sv": "Vill du se menyn?",
        "fi": "Haluatko n√§hd√§ valikon?",
    }[lang]
    label = {
        "en": "Show menu",
        "sv": "Visa menyn",
        "fi": "N√§yt√§ valikko",
    }[lang]
    payload = {
        "en": "Show me the menu",
        "sv": "Visa menyn",
        "fi": "N√§yt√§ valikko",
    }[lang]
    return (
        '<div class="suggest">'
        f'<div class="suggest-title">{title}</div>'
        f'<a class="btn suggest-btn" data-suggest="{payload}">{label}</a>'
        '</div>'
    )


def _frozen_response(lang: str) -> str:
    text = {
        "fi": "Myymme my√∂s raakapakasteita, jotka voit paistaa kotona. L√∂yd√§t vaihtoehdot valikostamme.",
        "en": "We also sell par-baked frozen items that you can finish at home. You‚Äôll find them in our menu.",
        "sv": "Vi s√§ljer ocks√• r√•frysta bakverk som du kan gr√§dda hemma. Du hittar dem i v√•r meny.",
    }[lang]
    return f"<p>{text}</p>{_suggest_menu_block(lang)}"


def _special_answer(query: str, lang: str) -> Optional[str]:
    ln = _lang_code(lang)
    qn = normalize(query)
    words = [w for w in qn.split() if w]
    greet_terms = {
        "hei","moi","moikka","morjes","moro","terve","heippa",
        "hi","hello","hey","hola","ciao"
    }
    if words and len(words) <= 4 and all(w in greet_terms for w in words):
        greetings = {
            "fi": "Hei! üëã Kuinka voin auttaa?",
            "en": "Hi there! üëã How can I help today?",
            "sv": "Hej! üëã Hur kan jag hj√§lpa till?",
        }
        return greetings.get(ln, greetings["fi"])

    weekday_tokens = {
        "mon": {"maanant", "monday"},
        "tue": {"tiist", "tuesday"},
        "wed": {"keskiviik", "keskiv", "wednes"},
        "thu": {"torst", "thursday"},
        "fri": {"perjant", "friday"},
        "sat": {"lauant", "saturday"},
    }

    def _mentioned(keys: set[str]) -> bool:
        return any(any(tok in qn for tok in weekday_tokens[k]) for k in keys)

    if _mentioned({"mon"}) and any(k in qn for k in ["auki", "open", "avoin", "avataan", "auke", "milloin", "mihin aikaan", "kello", "time"]):
        texts = {
            "fi": (
                "Maanantaisin myym√§l√§ on suljettu. Olemme avoinna torstaisin ja perjantaisin klo 11‚Äì17 sek√§ lauantaisin klo 11‚Äì15."
                " Jos haluat noudon maanantaille, sovi asiasta etuk√§teen s√§hk√∂postitse (rakaskotileipomo@gmail.com), niin katsomme onnistuuko j√§rjestely."
            ),
            "en": (
                "We‚Äôre closed on Mondays. Our regular opening hours are Thu‚ÄìFri 11:00‚Äì17:00 and Sat 11:00‚Äì15:00."
                " If you need a Monday pickup, email us first (rakaskotileipomo@gmail.com) so we can confirm whether it‚Äôs possible."
            ),
            "sv": (
                "Vi har st√§ngt p√• m√•ndagar. Ordinarie √∂ppettider √§r tors‚Äìfre kl. 11‚Äì17 och l√∂r kl. 11‚Äì15."
                " Beh√∂ver du h√§mta p√• m√•ndag? Mejla oss f√∂rst (rakaskotileipomo@gmail.com) s√• ser vi om det g√•r att ordna."
            ),
        }
        return texts[ln]

    if _mentioned({"tue"}) and any(k in qn for k in ["auki", "open", "avataan", "auke", "mihin aikaan", "milloin", "kello", "time"]):
        texts = {
            "fi": "Tiistaisin varsinainen myym√§l√§ on suljettu, mutta ennakkonoudot onnistuvat sopimalla etuk√§teen s√§hk√∂postitse osoitteeseen rakaskotileipomo@gmail.com. Varsinaiset aukiolot ovat to‚Äìpe klo 11‚Äì17 ja la klo 11‚Äì15.",
            "en": "We‚Äôre not open to walk-ins on Tuesdays; pickups require arranging in advance via email (rakaskotileipomo@gmail.com). Regular opening hours are Thu‚ÄìFri 11:00‚Äì17:00 and Sat 11:00‚Äì15:00.",
            "sv": "Vi h√•ller inte √∂ppet f√∂r drop-in p√• tisdagar; avh√§mtning kr√§ver √∂verenskommelse via mejl (rakaskotileipomo@gmail.com). Ordinarie √∂ppettider √§r tors‚Äìfre kl. 11‚Äì17 och l√∂r kl. 11‚Äì15.",
        }
        return texts[ln]

    if _mentioned({"wed"}) and any(k in qn for k in ["auki", "open", "avataan", "auke", "mihin aikaan", "milloin", "kello", "time"]):
        texts = {
            "fi": "Keskiviikkoisin myym√§l√§ on kiinni, mutta ennakkonoudot onnistuvat sopimalla etuk√§teen s√§hk√∂postitse (rakaskotileipomo@gmail.com). Varsinaiset aukiolot ovat to‚Äìpe klo 11‚Äì17 ja la klo 11‚Äì15.",
            "en": "We‚Äôre closed on Wednesdays, but you can arrange a pickup in advance by emailing rakaskotileipomo@gmail.com. Regular hours are Thu‚ÄìFri 11:00‚Äì17:00 and Sat 11:00‚Äì15:00.",
            "sv": "P√• onsdagar har vi st√§ngt, men f√∂rhandsbokade avh√§mtningar g√•r att ordna via mejl till rakaskotileipomo@gmail.com. Ordinarie √∂ppettider √§r tors‚Äìfre kl. 11‚Äì17 och l√∂r kl. 11‚Äì15.",
        }
        return texts[ln]

    no_arrangement_terms = {
        "ilman ennakkosop", "ilman sopim", "ilman soppar", "ilman ett√§", "ilman etuk√§teist", "ilman etuk√§teen",
        "ilman yhteytt√§", "ilman kontaktia", "ilman email", "ilman s√§hk√∂postia",
        "without prior", "without agreement", "without arrangement", "without contacting", "without emailing", "without email",
        "without reaching out", "without contact", "without notice",
        "utan att kontakta", "utan att h√∂ra av", "utan att meddela", "utan att mejla", "utan att maila", "utan kontakt",
        "ei sopimusta", "ei yhteydenottoa"
    }
    pickup_terms = {
        "nout", "nouto", "noutoon", "nouton", "nouta", "noud", "noudon", "nouda", "noutais", "noutaisin",
        "pickup", "pick up", "collect", "collection", "hakemaan", "hakua", "haen", "haetta"
    }

    if _contains(qn, list(no_arrangement_terms)) and _contains(qn, list(pickup_terms)):
        texts = {
            "fi": "Nouto aukioloaikojen ulkopuolella edellytt√§√§ ennakkosopimusta. Ota yhteytt√§ s√§hk√∂postitse rakaskotileipomo@gmail.com, niin vahvistamme mahdollisen ajan ja j√§rjestelyt.",
            "en": "Pickups outside normal opening hours need to be agreed in advance. Please email us at rakaskotileipomo@gmail.com so we can confirm the timing and details.",
            "sv": "Avh√§mtning utanf√∂r ordinarie √∂ppettider m√•ste avtalas i f√∂rv√§g. Mejla oss p√• rakaskotileipomo@gmail.com s√• bekr√§ftar vi tid och arrangemang.",
        }
        return texts[ln]

    import re as _re
    orig = (query or "").lower()
    hours = []
    for pat in [r"(?:klo|kello)\s*(\d{1,2})", r"\b(\d{1,2})\s*(?:pm|p\.m\.)"]:
        hours.extend(int(h) for h in _re.findall(pat, orig))
    if not hours:
        colon_matches = _re.findall(r"\b(\d{1,2})\s*:\s*(\d{2})", orig)
        hours.extend(int(hh) for hh, _ in colon_matches)
    if hours and _contains(qn, list(pickup_terms)):
        def requires_arrangement(hour: int) -> bool:
            if hour >= 18 or hour < 8:
                return True
            if _mentioned({"sat"}):
                return hour > 15
            return hour > 17
        if any(requires_arrangement(h) for h in hours):
            texts = {
                "fi": "Aukioloaikojen ulkopuoliset noudot tulee sopia etuk√§teen. L√§het√§ meille s√§hk√∂postia osoitteeseen rakaskotileipomo@gmail.com, niin vahvistamme ajan.",
                "en": "Pickups outside normal opening hours need an email agreement first. Please write to rakaskotileipomo@gmail.com so we can confirm a time.",
                "sv": "Avh√§mtningar utanf√∂r ordinarie tider m√•ste avtalas i f√∂rv√§g. Mejla oss p√• rakaskotileipomo@gmail.com s√• bekr√§ftar vi tiden.",
            }
            return texts[ln]

    if _contains(qn, ["karjalanpiir", "karelian", "karelsk"]) and _contains(qn, ["t√§yte", "t√§ytt", "filling", "fyllning", "fyllningar"]):
        texts = {
            "fi": "Karjalanpiirakoissamme on nelj√§ vakituista t√§ytett√§: riisipuuro, perunasose, ohrapuuro ja vegaaninen riisipuuro (ilman maitotuotteita).",
            "en": "We bake our Karelian pies with four fillings: rice porridge, mashed potato, barley porridge and a vegan rice porridge made without dairy.",
            "sv": "V√•ra karelska piroger finns med fyra fyllningar: risgrynsgr√∂t, potatismos, korngr√∂t och en vegansk risgr√∂t utan mejeriprodukter.",
        }
        return texts[ln]

    if _contains(qn, ["karjalanpiir", "karelian", "karelsk"]) and _contains(qn, ["laktoos", "lactose", "laktos", "maito", "milk", "mj√∂lk", "dairy"]):
        texts = {
            "fi": "Karjalanpiirakoiden riisipuuro tehd√§√§n laktoosittomasta maidosta, joten ne ovat laktoosittomia mutta sis√§lt√§v√§t maitotuotteen.",
            "en": "Our Karelian pies use lactose-free milk in the rice porridge, so they are lactose-free but do contain dairy.",
            "sv": "Vi kokar risgr√∂ten till Karelska piroger med laktosfri mj√∂lk ‚Äì pirogerna √§r laktosfria men inneh√•ller mejeriprodukt.",
        }
        return texts[ln]

    if _contains(qn, ["laktoos", "lactose", "laktos"]):
        texts = {
            "fi": "Kyll√§, kaikki tuotteemme ovat laktoosittomia, joten laktoosiherkk√§ voi nauttia niist√§ huoletta.",
            "en": "Yes‚Äîevery product we bake is lactose-free, so you can enjoy them even with lactose intolerance.",
            "sv": "Ja, alla v√•ra produkter √§r laktosfria s√• du kan njuta av dem √§ven om du undviker laktos.",
        }
        return texts[ln]

    if _contains(qn, ["gluteen", "gluten"]):
        texts = {
            "fi": "Meill√§ ei ole valitettavasti gluteenittomia tuotteita. Tilamme eiv√§t sovellu gluteenittomaan leivontaan muun leivonnan ohella jauhop√∂lyn vuoksi.",
            "en": "Unfortunately we do not offer gluten-free products. Our bakery handles plenty of wheat and rye flour so we can‚Äôt guarantee a gluten-free environment.",
            "sv": "Tyv√§rr erbjuder vi inga glutenfria produkter. Bageriet hanterar vetemj√∂l och r√•gmj√∂l, s√• milj√∂n √§r inte glutenfri.",
        }
        return texts[ln]

    if _contains(qn, ["etuk√§teen", "ennakk", "preorder", "pre-order", "pre order", "f√∂rbest√§ll", "f√∂rbest√§llning"]) and not _contains(qn, ["ennakkomaks", "jono", "jonot", "jonon"]):
        return _order_ui_block(ln)

    if _contains(qn, ["verkkokaup", "nettisivu", "online shop", "online store", "webbutik", "webbshop", "shop online"]):
        notes = {
            "fi": "Tee tilaus verkkokaupassa, niin voimme vahvistaa sen heti‚Äînouda myym√§l√§st√§ aukioloaikoina (emme tee toimituksia).",
            "en": "Place your order in the online shop and we‚Äôll confirm it right away‚Äîpickup in store during opening hours (we don‚Äôt deliver).",
            "sv": "L√§gg din best√§llning i webbutiken s√• bekr√§ftar vi den direkt‚Äîh√§mta i butiken under √∂ppettiderna (vi erbjuder ingen leverans).",
        }
        return _order_with_note(notes[ln], ln)

    order_terms = {
        "tilaus", "tilauk", "tilata", "tilausta", "tilaaminen", "orders", "order", "best√§ll", "best√§llning", "best√§llningar"
    }
    if _contains(qn, list(order_terms)) and not any(k in qn for k in [
        "peru", "muuta", "muok", "ennakkomaks", "delivery", "toimitus", "post" , "breakfast", "aamupala", "iltapala",
        "lasku", "invoice", "yrityk", "business"
    ]):
        return _order_ui_block(ln)

    if _contains(qn, ["yritys", "yritykselle", "b2b"]) and not _contains(qn, ["lasku", "invoice"]):
        notes = {
            "fi": "Yritysasiakkaat voivat tehd√§ suurempia tilauksia s√§hk√∂postitse rakaskotileipomo@gmail.com. Varaathan 2‚Äì3 p√§iv√§√§ aikaa tuotantoa varten ja muistathan, ett√§ nouto tapahtuu myym√§l√§st√§mme.",
            "en": "Business customers can place larger orders by emailing rakaskotileipomo@gmail.com. Please allow 2‚Äì3 days for production; pickups are always from our shop.",
            "sv": "F√∂retagskunder kan l√§gga st√∂rre best√§llningar via e-post till rakaskotileipomo@gmail.com. R√§kna med 2‚Äì3 dagar f√∂r bakningen och h√§mta best√§llningen i butiken.",
        }
        return _order_with_note(notes[ln], ln)

    if "perunahiut" in qn:
        texts = {
            "fi": "K√§yt√§mme lis√§aineettomia perunahiutaleita ‚Äì t√§yte sekoitetaan leipomolla ilman valmista soseita.",
            "en": "We use additive-free potato flakes; the filling is mixed on site without ready-made mash.",
            "sv": "Vi anv√§nder tillsatsfria potatisflingor ‚Äì fyllningen blandas i bageriet utan f√§rdig mos.",
        }
        return texts[ln]

    if "perunapiir" in qn:
        texts = {
            "fi": "Kyll√§, perunat√§ytteinen karjalanpiirakka kuuluu vakituiseen valikoimaamme. Saat sen uunituoreena myym√§l√§st√§ sek√§ raakapakasteena kotiin paistettavaksi.",
            "en": "Yes, potato-filled Karelian pies are part of our regular range. You can buy them fresh from the shop or as par-baked frozen pies for home baking.",
            "sv": "Ja, potatisfyllda karelska piroger ing√•r i v√•rt fasta sortiment. De finns b√•de nygr√§ddade i butiken och som r√•frysta f√∂r hemmagr√§ddning.",
        }
        return texts[ln]

    if "ohrapiir" in qn:
        texts = {
            "fi": "Ohrapiirakka on yksi vakiosmakumme. Piirakat ovat laktoosittomia ja saatavana sek√§ tuoreina ett√§ raakapakasteina.",
            "en": "Barley-filled Karelian pies are one of our core flavours. They‚Äôre lactose-free and available fresh or as frozen bake-at-home packs.",
            "sv": "Kornpiroger √§r en av v√•ra fasta smaker. De √§r laktosfria och finns b√•de nygr√§ddade och r√•frysta f√∂r hemmagr√§ddning.",
        }
        return texts[ln]

    if _contains(qn, ["riisipiir", "piirak"]) and _contains(qn, ["vegaan", "maidot", "kauramaid", "vegaani", "vegg"]):
        texts = {
            "fi": "Leivomme sek√§ perinteist√§ riisipiirakkaa ett√§ vegaanista riisipiirakkaa, jonka puuro tehd√§√§n kauramaidolla. Vegaaniversio kannattaa tilata etuk√§teen, jotta varmistamme saatavuuden.",
            "en": "We bake both the classic rice pie and a vegan rice pie whose porridge base is made with oat milk. Please preorder the vegan batch so we can guarantee availability.",
            "sv": "Vi bakar b√•de den klassiska rispirogen och en vegansk variant d√§r gr√∂ten g√∂rs med havremj√∂lk. F√∂rboka g√§rna den veganska satsen s√• vi kan garantera tillg√•ngen.",
        }
        return texts[ln]

    if "pull" in qn:
        texts = {
            "fi": "Kyll√§, vitriiniss√§ on p√§ivitt√§in suomalaisia pullia kuten kaneli- ja voisilm√§pullia sek√§ sesongin erikoisuuksia. Kardemumman jauhamme itse kokonaisista siemenist√§.",
            "en": "Yes, we bake Finnish buns daily ‚Äì cinnamon rolls, butter-eye buns and seasonal specials. We grind the cardamom fresh from whole pods.",
            "sv": "Ja, vi har f√§rska finska bullar varje dag ‚Äì kanelbullar, sm√∂r√∂ga-bullar och s√§songens specialiteter. Kardemumman mals alltid f√§rsk.",
        }
        return texts[ln]

    if _contains(qn, ["p√§hkin", "pahkin", "nut"]):
        texts = {
            "fi": "Emme k√§yt√§ p√§hkin√∂it√§ vakituisten tuotteiden valmistuksessa. Runebergin torttu sis√§lt√§√§ mantelijauhetta, ja se leivotaan erill√§√§n muista tuotteista.",
            "en": "We don‚Äôt use nuts in our regular products. Runeberg torte does contain almond, and we bake it separately from the other items.",
            "sv": "Vi anv√§nder inte n√∂tter i v√•rt ordinarie sortiment. Runebergst√•rta inneh√•ller mandel och bakas separat fr√•n √∂vriga produkter.",
        }
        return texts[ln]

    if _contains(qn, ["voita", "butter"]) and _contains(qn, ["pull", "bun"]):
        texts = {
            "fi": "Pullataikinassa k√§yt√§mme suomalaista voita ‚Äì emme k√§yt√§ margariinia.",
            "en": "We use Finnish butter in our bun dough‚Äîno margarine.",
            "sv": "Vi anv√§nder finskt sm√∂r i bulldegen ‚Äì ingen margarin.",
        }
        return texts[ln]

    if _contains(qn, ["vegaan", "maidoton"]) and _contains(qn, ["kanelipulla", "korvapuusti", "cinnamon"]):
        texts = {
            "fi": "Perinteinen kanelipulla sis√§lt√§√§ voita ja kananmunavoitelun, joten se ei ole vegaaninen. Tarvitessasi voimme leipoa er√§n vegaanisia pullia ennakkotilauksesta.",
            "en": "Our classic cinnamon bun uses butter and an egg wash, so it isn‚Äôt vegan. Let us know in advance and we can bake a vegan batch to order.",
            "sv": "Den klassiska kanelbullen inneh√•ller sm√∂r och penslas med √§gg, s√• den √§r inte vegansk. Med f√∂rbest√§llning kan vi baka en vegansk sats.",
        }
        return texts[ln]

    if _contains(qn, ["korvapuusti", "korvapuust", "cinnamon roll"]) and _contains(qn, ["myyt", "sale"]):
        texts = {
            "fi": "Kyll√§ ‚Äì korvapuusti on vitriinimme vakkariherkku.",
            "en": "Yes, cinnamon rolls (korvapuusti) are a staple in our display.",
            "sv": "Ja, korvapuusti (kanelbulle) finns n√§stan alltid i montern.",
        }
        return texts[ln]

    if _contains(qn, ["erikoispull", "specialbulla", "sesonki"]):
        texts = {
            "fi": "Sesongeittain tarjoamme erikoispullia, esim. Runebergin torttuja tai laskiaispullia ‚Äì seuraa somea ja verkkokauppaa.",
            "en": "We rotate seasonal buns‚Äîthink Runeberg tortes, Shrove buns and other specials. Follow our social channels for updates.",
            "sv": "Vi erbjuder s√§songsbullar, till exempel Runebergst√•rtor och fastlagsbullar. F√∂lj v√•ra kanaler f√∂r nyheter.",
        }
        return texts[ln]

    if _contains(qn, ["kuinka iso", "paljonko pain", "size"]) and _contains(qn, ["pull", "bun"]):
        texts = {
            "fi": "Pullat ovat runsaita ‚Äì noin 110‚Äì120 grammaa kappale, suunnilleen k√§mmenen kokoisia.",
            "en": "Each bun is generous, roughly 110‚Äì120‚ÄØg (about the size of your palm).",
            "sv": "Bullarna √§r rej√§lt tilltagna ‚Äì cirka 110‚Äì120 g styck, ungef√§r handflatsstora.",
        }
        return texts[ln]

    if _contains(qn, ["kananmun", "egg"]) and _contains(qn, ["pull", "bun"]):
        texts = {
            "fi": "Pullien pinta kaunistellaan ohuella kananmunavoitelulla ennen paistoa. Ennakkotilauksessa voimme j√§tt√§√§ voitelun pois.",
            "en": "We brush the buns with a light egg wash before baking; for preorders we can skip it on request.",
            "sv": "Bullarna penslas l√§tt med √§gg f√∂re gr√§ddning ‚Äì vid f√∂rbest√§llning kan vi hoppa √∂ver penslingen om du vill.",
        }
        return texts[ln]

    if _contains(qn, ["sokeri", "kuorrute", "icing"]) and _contains(qn, ["pull", "bun"]):
        texts = {
            "fi": "Vakio kaneli- ja voisilm√§pullamme eiv√§t sis√§ll√§ sokerikuorrutetta; erikoispullissa saattaa olla kuorrutus.",
            "en": "Our regular cinnamon and butter-eye buns don‚Äôt have icing‚Äîseasonal specials may.",
            "sv": "V√•ra vanliga kanel- och sm√∂r√∂gebullar har ingen glasyr ‚Äì men s√§songsbullar kan ha det.",
        }
        return texts[ln]

    if _contains(qn, ["pull", "bun"]) and _contains(qn, ["kauan", "kuinka", "s√§ily"]):
        texts = {
            "fi": "Pullat ovat parhaimmillaan samana p√§iv√§n√§. Ne s√§ilyv√§t huoneenl√§mm√∂ss√§ 1‚Äì2 p√§iv√§√§ tai pidemp√§√§n pakastettuna.",
            "en": "Buns are best the day they‚Äôre baked. Keep them 1‚Äì2 days at room temperature or freeze for longer storage.",
            "sv": "Bullarna √§r b√§st samma dag. De h√•ller 1‚Äì2 dagar i rumstemperatur eller l√§ngre i frysen.",
        }
        return texts[ln]

    if _contains(qn, ["kakku", "cake"]) and _contains(qn, ["tilaus", "tilauk", "tilaust", "custom", "h√§√§", "catering"]):
        texts = {
            "fi": "Emme leivo kakkuja (t√§ytekakkuja, kuivakakkuja), voileip√§kakkuja, lihapiirakoita tai konditoriatuotteita. Olemme ensisijaisesti karjalanpiirakkaleipomo.",
            "en": "We do not bake cakes (layer cakes, loaf cakes), sandwich cakes, meat pies or confectionery items. We‚Äôre primarily a Karelian pie bakery.",
            "sv": "Vi bakar inte t√•rtor (gr√§ddt√•rtor eller mjuka kakor), sm√∂rg√•st√•rtor, k√∂ttpiroger eller konditorivaror. Vi √§r i f√∂rsta hand ett karelskt pirogbageri.",
        }
        return texts[ln]

    if _contains(qn, ["pys√§k√∂", "park", "parkering"]):
        texts = {
            "fi": "Kadunvarsipys√§k√∂inti Kumpulantiell√§ ja l√§hikaduilla on maksullista arkip√§ivisin ‚Äì k√§yt√§ pys√§k√∂intisovellusta tai automaattia.",
            "en": "There‚Äôs paid street parking on Kumpulantie and the surrounding streets‚Äîuse the local parking app or meter.",
            "sv": "Det finns avgiftsbelagd gatuparkering p√• Kumpulantie och n√§rliggande gator ‚Äì anv√§nd parkeringsappen eller automaten.",
        }
        return texts[ln]

    if _contains(qn, ["julkis", "tram", "metro", "bus", "bussi", "sp√•rvagn", "raitiovaunu", "pys√§k", "pysak"]) and not _contains(qn, ["y-tunnus", "ytunnus", "y tunnus", "y id", "business id", "company id", "f√∂retagsnummer"]):
        texts = {
            "fi": "L√§himm√§t pys√§kit ovat M√§kel√§nrinne (bussit 55, 59 ja useita muita linjoja sek√§ raitiovaunut 1 ja 7) ja J√§ms√§nkatu (raitiovaunu 9 ja bussi 59). Molemmista on parin minuutin k√§vely leipomolle. Tarkista ajantasaiset reitit osoitteesta hsl.fi.",
            "en": "The closest stops are M√§kel√§nrinne‚Äîserved by buses 55, 59 and numerous other lines plus trams 1 and 7‚Äîand J√§ms√§nkatu for tram 9 and bus 59. Both are roughly a two-minute walk away. Please see hsl.fi for current routes.",
            "sv": "N√§rmaste h√•llplatser √§r M√§kel√§nrinne (bussarna 55, 59 och flera andra linjer samt sp√•rvagn 1 och 7) och J√§ms√§nkatu d√§r sp√•rvagn 9 och buss 59 stannar. B√•da ligger cirka tv√• minuters promenad bort. Se hsl.fi f√∂r uppdaterade rutter.",
        }
        return texts[ln]

    if _contains(qn, ["esteet", "accessible", "tillg√§nglig"]):
        texts = {
            "fi": "Sis√§√§nk√§ynnille johtaa kolme porrasta eik√§ rampia ole. Autamme mielell√§mme kantamalla tilauksesi sis√§√§n tai ulos.",
            "en": "There are three steps up to the entrance and no ramp. We‚Äôre happy to help carry your order in or out.",
            "sv": "Det finns tre trappsteg upp till ing√•ngen och ingen ramp. Vi hj√§lper g√§rna till att b√§ra in eller ut din best√§llning.",
        }
        return texts[ln]

    if _contains(qn, ["kahvi", "coffee"]) and _contains(qn, ["saako", "offer", "serv"]):
        texts = {
            "fi": "Myym√§l√§ss√§mme ei ole kahvitarjoilua ‚Äì keskitymme leivonnaisiin, mutta voit tuoda oman take away -kahvisi.",
            "en": "We don‚Äôt serve coffee‚Äîwe focus on the bakes, though you‚Äôre welcome to bring your own take-away coffee.",
            "sv": "Vi serverar inte kaffe ‚Äì vi fokuserar p√• bakverken, men ta g√§rna med eget take away-kaffe.",
        }
        return texts[ln]

    if _contains(qn, ["ruokapaik", "l√§hist", "nearby food", "restaurant"]):
        texts = {
            "fi": "Vallilan alueella on useita kahviloita ja ravintoloita ‚Äì esimerkiksi Paavalinkirkon ja Konepajan kulmilla muutaman minuutin k√§velymatkan p√§√§ss√§.",
            "en": "There are plenty of caf√©s and restaurants in Vallila‚ÄîPaavalin kirkko and the Konepaja block are only a few minutes away on foot.",
            "sv": "Det finns gott om kaf√©er och restauranger i Vallila ‚Äì kring Paavalinkyrkan och Konepaja bara n√•gra minuters promenad bort.",
        }
        return texts[ln]

    if (_contains(qn, ["ilman", "walk", "drop"]) and _contains(qn, ["tilaus", "tilaa", "order"])):
        texts = {
            "fi": "Voit tulla ostoksille ilman ennakkotilausta ‚Äì vitriiniss√§ on tuotteita niin kauan kuin paistoer√§√§ riitt√§√§.",
            "en": "Yes, walk-ins are welcome‚Äîwe keep the display stocked while each bake lasts.",
            "sv": "Ja, drop-in fungerar fint ‚Äì montern fylls p√• s√• l√§nge varje bakning r√§cker.",
        }
        return texts[ln]

    if _contains(qn, ["tarjoilu", "vat", "vati", "patar", "serving", "platter", "astiat", "cutlery", "dish", "lautanen", "plate"]) and _contains(qn, ["lain", "vuokra", "rent", "varata", "reserve"]):
        texts = {
            "fi": "Emme tarjoa tarjoiluvateja, astioita tai aterimia lainattavaksi ‚Äì tuotteet pakataan mukaan kertak√§ytt√∂- tai kierr√§tyspakkauksiin.",
            "en": "We don‚Äôt rent serving platters, dishes or cutlery; everything is packed to-go in our own packaging.",
            "sv": "Vi hyr inte ut serveringsfat, k√§rl eller bestick ‚Äì allt packas f√∂r avh√§mtning i v√•ra egna f√∂rpackningar.",
        }
        return texts[ln]

    if _contains(qn, ["ty√∂por", "tyopor", "tiim", "team", "staff"]) and _contains(qn, ["aamupala", "iltapala", "breakfast", "evening snack", "snack"] ) and _contains(qn, ["tilaus", "tilata", "order"]):
        texts = {
            "fi": (
                "Kyll√§, tilaukset voi noutaa myym√§l√§st√§mme aukioloaikoina. Suuremmat er√§t onnistuvat my√∂s maanantaisin, tiistaisin ja keskiviikkoisin sopimalla etuk√§teen."
            ),
            "en": (
                "Yes, you can pick up from the shop during opening hours. Larger batches can also be prepared for Monday, Tuesday or Wednesday pickups when arranged in advance."
            ),
            "sv": (
                "Ja, du kan h√§mta best√§llningen under √∂ppettiderna. St√∂rre satser ordnar vi √§ven f√∂r m√•ndagar, tisdagar och onsdagar om vi kommer √∂verens i f√∂rv√§g."
            ),
        }
        follow = {
            "fi": "Kerro ryhm√§n koko ja toivottu noutoaika s√§hk√∂postilla osoitteeseen rakaskotileipomo@gmail.com, niin vahvistamme j√§rjestelyt ja aikataulun.",
            "en": "Email us at rakaskotileipomo@gmail.com with your headcount and desired pickup time so we can confirm the plan and timing.",
            "sv": "Mejla oss p√• rakaskotileipomo@gmail.com med antal personer och √∂nskad avh√§mtningstid s√• bekr√§ftar vi uppl√§gget och tidtabellen.",
        }
        return f"<p>{texts[ln]}</p><p>{follow[ln]}</p>"

    if _contains(qn, ["post", "posti", "postitse", "ship", "shipping", "delivery", "deliver", "toimitus", "l√§hett", "l√§hett√§k", "l√§hett√§"]) and _contains(qn, ["tuote", "tuotte", "tuotteet", "tuotteita", "tilaus", "order", "paketti", "products"]):
        paragraphs = {
            "fi": (
                "Tilaukset noudetaan myym√§l√§st√§mme aukioloaikoina. Suuremmat er√§t onnistuvat my√∂s maanantaisin, tiistaisin ja keskiviikkoisin sopimalla etuk√§teen."
            ),
            "en": (
                "Orders are picked up from the shop during opening hours. Larger batches can be prepared for Monday, Tuesday or Wednesday pickups when arranged in advance."
            ),
            "sv": (
                "Best√§llningar h√§mtas i butiken under √∂ppettiderna. St√∂rre satser kan ordnas f√∂r h√§mtning m√•ndagar, tisdagar eller onsdagar efter √∂verenskommelse."
            ),
        }
        follow = {
            "fi": "Emme valitettavasti tarjoa kotiinkuljetusta, mutta voit tilata taksin tai kuljetuspalvelun hakemaan tilauksen. Luovutamme tuotteet kuljettajalle ja l√§het√§mme tarvittaessa maksulinkin etuk√§teen, kun tilaus on vahvistettu.",
            "en": "We do not offer delivery, but you can arrange a taxi or courier to collect the order. We hand everything over to the driver and can send a payment link in advance once the order is confirmed.",
            "sv": "Vi erbjuder ingen leverans, men du kan boka taxi eller kurir som h√§mtar best√§llningen. Vi l√§mnar √∂ver varorna till f√∂raren och kan skicka en betalningsl√§nk i f√∂rv√§g n√§r ordern bekr√§ftats.",
        }
        return f"<p>{paragraphs[ln]}</p><p>{follow[ln]}</p>"

    if _contains(qn, ["y-tunnus", "ytunnus", "y tunnus", "y-tunn", "business id", "company id", "f√∂retagsnummer", "y id"]):
        texts = {
            "fi": "Y-tunnuksemme on 3184994-7.",
            "en": "Our business ID is 3184994-7.",
            "sv": "V√•rt FO-nummer √§r 3184994-7.",
        }
        return texts[ln]

    if _contains(qn, ["lemmik", "el√§in", "pet", "hund", "dog", "cat", "kissa", "koira", "kissa"]):
        large_terms = {"iso", "suuri", "suuret", "suuren", "big", "large", "stor", "stora"}
        if any(t in qn for t in large_terms):
            texts = {
                "fi": "Suuret koirat eiv√§t valitettavasti sovi pieneen myym√§l√§√§mme. Voimme pakata tilauksen valmiiksi odottamaan ulkopuolelle.",
                "en": "Large dogs aren‚Äôt a good fit inside our small shop. We‚Äôre happy to hand the order over outside.",
                "sv": "Stora hundar passar tyv√§rr inte i v√•r lilla butik. Vi l√§mnar g√§rna best√§llningen utanf√∂r.",
            }
            return texts[ln]
        texts = {
            "fi": "Pienet lemmikit ovat tervetulleita mukana k√§ynnille, kunhan ne pysyv√§t syliss√§ tai hihnassa ja muiden asiakkaiden huomioiminen onnistuu.",
            "en": "Small pets are welcome to visit as long as they‚Äôre carried or on a leash and comfortable around other customers.",
            "sv": "Sm√• husdjur √§r v√§lkomna s√• l√§nge de b√§rs eller h√•lls i koppel och trivs bland andra kunder.",
        }
        return texts[ln]

    if _contains(qn, ["kuit", "receipt", "lasku", "invoice"]) and _contains(qn, ["yritys", "yrityk", "company", "f√∂retag"]):
        texts = {
            "fi": "Saat yrityksen nimell√§ paperikuitin noudon yhteydess√§. Jos tarvitset laskun tai muuta lis√§tietoa, l√§het√§ tilauksen tiedot s√§hk√∂postitse osoitteeseen rakaskotileipomo@gmail.com.",
            "en": "We can provide a paper receipt under your company name when you pick up. If you need an invoice or extra details, email the order information to rakaskotileipomo@gmail.com.",
            "sv": "Vi kan ge ett papperskvitto i f√∂retagets namn vid avh√§mtning. Beh√∂ver du faktura eller fler uppgifter, mejla best√§llningen till rakaskotileipomo@gmail.com.",
        }
        return texts[ln]

    if _contains(qn, ["p√∂yd", "table", "seat"]) and _contains(qn, ["varaa", "varata", "book", "reserve", "reservation", "reservera"]):
        texts = {
            "fi": "Emme tarjoa p√∂yt√§varauksia tai asiakaspaikkoja ‚Äì myym√§l√§ toimii noutopisteen√§.",
            "en": "We don‚Äôt have seating or table reservations‚Äîthe shop is takeaway only.",
            "sv": "Vi har inga sittplatser eller bordsbokningar ‚Äì butiken √§r en ren avh√§mtningspunkt.",
        }
        return texts[ln]

    if _contains(qn, ["wc", "toilet", "restroom"]):
        texts = {
            "fi": "Meill√§ ei valitettavasti ole asiakas-WC:t√§.",
            "en": "We don‚Äôt have a customer restroom, sorry.",
            "sv": "Tyv√§rr har vi ingen kundtoalett.",
        }
        return texts[ln]

    if _contains(qn, [
        "asiakaspaikka", "asiakaspaikkoja", "istumapaikka", "istumapaikkoja", "istuma", "istua", "istumaan",
        "seating", "seat", "sit down", "mahtuu", "kapasiteet", "capacity"
    ]):
        texts = {
            "fi": "Myym√§l√§mme on noutopiste ilman istumapaikkoja ‚Äì tuotteet pakataan mukaan.",
            "en": "We operate as a takeaway shop‚Äîthere‚Äôs no indoor seating.",
            "sv": "Butiken √§r en take-away punkt ‚Äì vi har inga sittplatser.",
        }
        return texts[ln]

    if _contains(qn, ["kes√§", "talvi", "season"] ) and _contains(qn, ["aukiolo", "hours"]):
        texts = {
            "fi": "Perusaukiolomme ovat To‚ÄìPe 11‚Äì17 ja La 11‚Äì15. Mahdolliset kausimuutokset p√§ivit√§mme verkkosivuille ja Googleen.",
            "en": "Our standard hours are Thu‚ÄìFri 11‚Äì17 and Sat 11‚Äì15. Any seasonal changes are announced on our website and Google listing.",
            "sv": "V√•ra ordinarie tider √§r tors‚Äìfre 11‚Äì17 och l√∂r 11‚Äì15. Eventuella s√§songs√§ndringar meddelas p√• webbplatsen och Google.",
        }
        return texts[ln]

    if _contains(qn, ["tuore", "eniten", "fresh"] ) and _contains(qn, ["piirak", "piirakka"]) and _contains(qn, ["milloin", "mihin", "when"]):
        texts = {
            "fi": "Tuoreimmat piirakat ovat tarjolla heti, kun avaamme: torstaisin ja perjantaisin klo 11 sek√§ lauantaisin klo 11.",
            "en": "You‚Äôll find the freshest pies right at opening‚ÄîThu & Fri 11:00 and Sat 11:00.",
            "sv": "De f√§rskaste pirogerna finns direkt vid √∂ppning ‚Äì tors & fre kl. 11 samt l√∂r kl. 11.",
        }
        return texts[ln]

    if (_contains(qn, ["tuore", "uunituore"])) and _contains(qn, ["pakaste", "raakapakaste", "frozen", "djupfryst", "fryst"]):
        paragraphs = {
            "fi": "Piirakoitamme saa sek√§ uunituoreina myym√§l√§st√§ ett√§ raakapakasteina (10 tai 20 kpl pakkaukset) kotiin paistettavaksi.",
            "en": "We sell our pies both fresh from the shop and as par-baked frozen packs (10 or 20 pies) that you can finish at home.",
            "sv": "Vi s√§ljer v√•ra piroger b√•de nygr√§ddade i butiken och som r√•frysta f√∂rpackningar (10 eller 20 st) att gr√§dda hemma.",
        }
        return f"<p>{paragraphs[ln]}</p>{_suggest_menu_block(ln)}"

    if _contains(qn, ["pelkk", "pelk√§st√§√§n"] ) and _contains(qn, ["ruis", "rye"]) and _contains(qn, ["taikin", "degen"]):
        texts = {
            "fi": "Karjalanpiirakan kuori on sataprosenttista ruista ‚Äì emme lis√§√§ vehn√§√§ taikinaan.",
            "en": "Our Karelian pie crusts are 100% rye with no wheat added.",
            "sv": "Skalet i v√•ra karelska piroger best√•r till 100 % av r√•g, utan vetetillsats.",
        }
        return texts[ln]

    if _contains(qn, ["perunahiut", "potato flakes"]):
        texts = {
            "fi": "K√§yt√§mme lis√§aineettomia perunahiutaleita ja keitetty√§ perunaa ‚Äì teemme t√§ytteen itse leipomolla.",
            "en": "We combine additive-free potato flakes with cooked potato‚Äîso the mash is prepared in-house.",
            "sv": "Vi anv√§nder tillsatsfria potatisflingor tillsammans med kokt potatis ‚Äì fyllningen g√∂rs i bageriet.",
        }
        return texts[ln]

    if _contains(qn, ["ohje", "ohjet", "ohjeet", "paisto-ohje", "paisto-ohjeet"]) and _contains(qn, ["piirakka", "piirak", "pirog"]):
        texts = {
            "fi": (
                "Kotona paista raakapakastepiirakat 250‚Äì275‚ÄØ¬∞C uunissa noin 18‚Äì20 minuuttia ja anna vet√§yty√§ hetki."
                " Jos l√§mmit√§t valmiiksi paistettuja piirakoita, 200‚Äì220‚ÄØ¬∞C ja 10‚Äì12 minuuttia riitt√§√§, kunnes pinta on rapea."
            ),
            "en": (
                "Bake raw-frozen pies at 250‚Äì275‚ÄØ¬∞C for about 18‚Äì20 minutes, then let them rest briefly."
                " For reheating already baked pies, use 200‚Äì220‚ÄØ¬∞C for roughly 10‚Äì12 minutes until crisp."
            ),
            "sv": (
                "Gr√§dda r√•frysta piroger i 250‚Äì275‚ÄØ¬∞C i cirka 18‚Äì20 minuter och l√•t dem vila en stund."
                " F√∂r att v√§rma f√§rdiggr√§ddade piroger r√§cker 200‚Äì220‚ÄØ¬∞C i ungef√§r 10‚Äì12 minuter tills de √§r krispiga."
            ),
        }
        return texts[ln]

    if _contains(qn, ["l√§mm", "l√§mmit" ]) and _contains(qn, ["pakastepiir", "frozen pie"]):
        texts = {
            "fi": "L√§mmit√§ pakastepiirakka 200‚Äì220 ¬∞C uunissa noin 10‚Äì12 minuuttia, kunnes pinta on rapea ja sisus kuuma.",
            "en": "Reheat a frozen pie in a 200‚Äì220‚ÄØ¬∞C oven for about 10‚Äì12 minutes until hot and crisp.",
            "sv": "V√§rm en fryst pirog i 200‚Äì220‚ÄØ¬∞C ugn i cirka 10‚Äì12 minuter tills den √§r varm och krispig.",
        }
        return texts[ln]

    if _contains(qn, ["paista", "bake"]) and _contains(qn, ["raakapakaste", "raw-frozen", "par-baked"]):
        texts = {
            "fi": "Paista raakapakastepiirakat 250‚Äì275‚ÄØ¬∞C uunissa noin 18‚Äì20 minuuttia. Anna vet√§yty√§ hetki ennen tarjoilua.",
            "en": "Bake raw-frozen pies at 250‚Äì275‚ÄØ¬∞C for about 18‚Äì20 minutes, then let them rest briefly before serving.",
            "sv": "Gr√§dda r√•frysta piroger i 250‚Äì275‚ÄØ¬∞C i cirka 18‚Äì20 minuter och l√•t dem vila en stund f√∂re servering.",
        }
        return texts[ln]

    if _contains(qn, ["kuinka monta", "montako", "how many"]) and _contains(qn, ["puss", "pak", "bag"]) and _contains(qn, ["piirakka", "piirak", "pirog"]):
        texts = {
            "fi": "Raakapakastepussissa on joko 10 tai 20 piirakkaa ‚Äì valitse tarvitsemasi koko.",
            "en": "Our frozen packs come with either 10 or 20 pies‚Äîpick the size that suits you.",
            "sv": "V√•ra r√•frysta f√∂rpackningar inneh√•ller antingen 10 eller 20 piroger ‚Äì v√§lj den storlek som passar dig.",
        }
        return texts[ln]

    if _contains(qn, ["irto", "yksitt√§", "loose"]) and _contains(qn, ["piirakka", "piirak", "pirog"]):
        texts = {
            "fi": "Kyll√§, voit ostaa karjalanpiirakoita sek√§ yksitt√§in ett√§ 10/20 kappaleen pakkauksissa.",
            "en": "Yes, you can buy pies individually over the counter or in 10 / 20 piece packs.",
            "sv": "Ja, du kan k√∂pa karelska piroger styckvis i butiken eller i paket om 10 / 20 stycken.",
        }
        return texts[ln]

    if _contains(qn, ["kuinka kauan", "kauanko", "how long"]) and _contains(qn, ["pakastim", "freezer"]) and _contains(qn, ["piirakka", "piirak", "pirog"]):
        texts = {
            "fi": "Kyps√§pakasteet kannattaa k√§ytt√§√§ noin kahden kuukauden kuluessa, raakapakasteet s√§ilyv√§t jopa 6 kuukautta.",
            "en": "Ready-baked frozen pies are best within about 2 months; raw-frozen pies keep up to 6 months.",
            "sv": "F√§rdiggr√§ddade fryspiroger h√•ller cirka 2 m√•nader; r√•frysta piroger upp till 6 m√•nader.",
        }
        return texts[ln]

    if _contains(qn, ["paistovalmi", "ready to bake", "par-baked"]) and _contains(qn, ["piirakka", "piirak", "pirog"]):
        texts = {
            "fi": "Kyll√§ ‚Äì raakapakasteet ovat valmiiksi muotoiltuja, joten voit paistaa ne helposti kotiuunissa.",
            "en": "Yes, our raw-frozen pies are ready to bake and go straight into your home oven.",
            "sv": "Ja, v√•ra r√•frysta piroger √§r f√§rdiga att gr√§ddas direkt i hemmaugnen.",
        }
        return texts[ln]

    if _contains(qn, ["k√§sin", "handmade", "handgjord"]) and _contains(qn, ["piirakka", "piirak", "pirog"]):
        texts = {
            "fi": "Kyll√§ ‚Äì jokainen piirakka rypytet√§√§n k√§sin Vallilan leipomollamme.",
            "en": "Yes‚Äîevery pie is crimped by hand in our Vallila bakery.",
            "sv": "Ja ‚Äì varje pirog nypas f√∂r hand i v√•rt bageri i Vallila.",
        }
        return texts[ln]
    if "samos" in qn and _contains(qn, ["aina", "jatku", "usein", "saatavilla", "available"]):
        texts = {
            "fi": "Samosat kuuluvat vakiovalikoimaamme ja niit√§ l√∂ytyy l√§hes aina vitriinist√§. Suurempaan m√§√§r√§√§n suosittelemme ennakkotilausta, jotta varmasti riitt√§√§ kaikille.",
            "en": "Samosas are part of our core range and are almost always available. For larger quantities we suggest preordering so we can set aside enough for you.",
            "sv": "Samosor ing√•r i v√•rt fasta sortiment och finns n√§stan alltid framme. F√∂r st√∂rre m√§ngder rekommenderar vi att du f√∂rboka s√• att vi kan l√§gga undan √•t dig.",
        }
        return texts[ln]

    if "samos" in qn and _contains(qn, ["t√§ytt", "t√§yte", "fylln", "fill"]):
        texts = {
            "fi": "Tarjolla on vegaaninen gobi-samosa (kukkakaali, peruna, herneet, mausteet) sek√§ kana-samosa. Molemmat ovat lempe√§n mausteisia intialaisia leivonnaisia.",
            "en": "We make a vegan gobi samosa with cauliflower, potato, peas and spices, plus a chicken samosa. Both are gently spiced Indian pastries.",
            "sv": "Vi erbjuder en vegansk gobi-samosa med blomk√•l, potatis, √§rtor och kryddor samt en kycklingsamosa. B√•da √§r smakrika med mild hetta.",
        }
        return texts[ln]

    if _contains(qn, ["suolaisia", "suolainen"]) and _contains(qn, ["muiden", "muun", "other"]) and _contains(qn, ["t√§ytte", "filling"]):
        texts = {
            "fi": "Karjalanpiirakoidemme vakit√§ytteet ovat riisi, peruna, ohra ja vegaaninen riisi. Muita suolaisia t√§ytemakuja emme t√§ll√§ hetkell√§ tarjoa.",
            "en": "Our savoury Karelian pies come in four fillings: rice, potato, barley and a vegan rice option. We don‚Äôt offer additional savoury fillings right now.",
            "sv": "V√•ra salta karelska piroger finns med fyra fyllningar: ris, potatis, korn och en vegansk risvariant. Vi har f√∂r n√§rvarande inga andra salta fyllningar.",
        }
        return texts[ln]

    if "gobi" in qn and _contains(qn, ["vegaan", "vegansk", "vegan"]):
        texts = {
            "fi": "Kyll√§ ‚Äì gobi-samosa on t√§ysin vegaaninen ja sis√§lt√§√§ kukkakaalia, perunaa, herneit√§ ja mausteita.",
            "en": "Yes, the gobi samosa is fully vegan with cauliflower, potato, peas and spices.",
            "sv": "Ja, gobi-samosan √§r helt vegansk med blomk√•l, potatis, √§rtor och kryddor.",
        }
        return texts[ln]

    if "samos" in qn and _contains(qn, ["mauste", "perinte", "traditional"]):
        texts = {
            "fi": "K√§yt√§mme perinteisi√§ intialaisia mausteita kuten jeeraa, korianteria, kurkumaa, garam masalaa ja chili√§.",
            "en": "We season them with traditional Indian spices such as cumin, coriander, turmeric, garam masala and chili.",
            "sv": "Vi kryddar samosorna med klassiska indiska kryddor som spiskummin, koriander, gurkmeja, garam masala och chili.",
        }
        return texts[ln]

    if "samos" in qn and _contains(qn, ["annos", "annoksessa", "portion", "pack"]):
        texts = {
            "fi": "Tuoreita samosoja voi ostaa yksitt√§in. Raakapakastepakkaus sis√§lt√§√§ 5 samosaa.",
            "en": "Fresh samosas are sold individually, while our freezer pack contains 5 pieces.",
            "sv": "F√§rska samosor s√§ljs styckvis, och v√•ra r√•frysta f√∂rpackningar inneh√•ller 5 stycken.",
        }
        return texts[ln]

    if "samos" in qn and _contains(qn, ["iso", "koko", "size"]):
        texts = {
            "fi": "Samosat ovat k√§mmenen kokoisia, noin 100‚Äì120 g kappale.",
            "en": "Each samosa is palm-sized, roughly 100‚Äì120‚ÄØg.",
            "sv": "Samosorna √§r handflatsstora och v√§ger cirka 100‚Äì120 g per styck.",
        }
        return texts[ln]

    if "samos" in qn and _contains(qn, ["pakast", "freeze", "frysa"]):
        texts = {
            "fi": "Voit pakastaa samosat kotona ‚Äì l√§mmit√§ ne 200‚ÄØ¬∞C uunissa noin 20‚Äì25 minuuttia.",
            "en": "You can freeze leftover samosas at home and reheat at 200‚ÄØ¬∞C for about 20‚Äì25 minutes.",
            "sv": "Du kan frysa samosorna hemma och v√§rma dem i 200‚ÄØ¬∞C ugn i cirka 20‚Äì25 minuter.",
        }
        return texts[ln]

    if "samos" in qn and _contains(qn, ["tulinen", "spicy", "hot"]):
        texts = {
            "fi": "Samosat ovat lempe√§n mausteisia ‚Äì eiv√§t kovin tulisia. Pyyd√§ rohkeasti lis√§potkua, jos haluat.",
            "en": "They‚Äôre mildly spiced rather than hot; let us know if you‚Äôd like extra heat.",
            "sv": "Samosorna har mjuk hetta och √§r inte starka ‚Äì s√§g till om du vill ha extra styrka.",
        }
        return texts[ln]

    if "samos" in qn and _contains(qn, ["dippi", "kastike", "dip"]):
        texts = {
            "fi": "Dippi ei sis√§lly vakiona, mutta suosittelemme esimerkiksi jogurtti-minttukastiketta tai mango chutneyta rinnalle.",
            "en": "We don‚Äôt include a dip by default, but recommend pairing them with yogurt-mint sauce or mango chutney.",
            "sv": "Dipps√•s ing√•r inte som standard, men vi rekommenderar yoghurt-myntas√•s eller mango chutney vid sidan.",
        }
        return texts[ln]

    if "samos" in qn and _contains(qn, ["maa", "resept", "recipe"]):
        texts = {
            "fi": "Resepti tulee Rakan kotiseudulta Intiasta ‚Äì vegaaninen gobi on perheresepti ja kana-samosa maustetaan samalla tyylill√§.",
            "en": "The recipe comes from Raka‚Äôs home region in India‚Äîthe vegan gobi is a family recipe and the chicken samosa follows the same spice profile.",
            "sv": "Receptet kommer fr√•n Rakas hemtrakter i Indien ‚Äì den veganska gobin √§r ett familjerecept och kycklingsamosan kryddas i samma stil.",
        }
        return texts[ln]

    if "samos" in qn and _contains(qn, ["vehn", "vete", "wheat"]):
        texts = {
            "fi": "Samosoiden taikinassa k√§yt√§mme vehn√§jauhoja, joten tuote ei ole gluteeniton.",
            "en": "The samosa dough contains wheat flour, so they‚Äôre not gluten-free.",
            "sv": "Degenn till samosorna inneh√•ller vetemj√∂l och √§r d√§rf√∂r inte glutenfri.",
        }
        return texts[ln]

    if _contains(qn, ["soija", "soijaa", "soy"]):
        texts = {
            "fi": "Emme k√§yt√§ soijaa tuotteissamme.",
            "en": "We do not use soy in our products.",
            "sv": "Vi anv√§nder inte soja i v√•ra produkter.",
        }
        return texts[ln]

    if _contains(qn, ["mobilepay"]):
        texts = {
            "fi": "MobilePay ei valitettavasti k√§y maksutapana. Suosittelemme korttimaksua.",
            "en": "We don‚Äôt support MobilePay at the moment; please use a card.",
            "sv": "MobilePay fungerar tyv√§rr inte som betalningsmetod. Anv√§nd kort i st√§llet.",
        }
        return texts[ln]

    if _contains(qn, ["lasku", "invoice"]):
        texts = {
            "fi": "Yrityslaskutus onnistuu tapauskohtaisesti ‚Äì ota yhteytt√§ osoitteeseen rakaskotileipomo@gmail.com ja kerro tilauksesi.",
            "en": "We handle invoicing case by case; email us at rakaskotileipomo@gmail.com with your order details.",
            "sv": "Fakturering ordnar vi fr√•n fall till fall ‚Äì mejla oss p√• rakaskotileipomo@gmail.com med dina orderuppgifter.",
        }
        return texts[ln]

    if _contains(qn, ["wolt", "foodora"]):
        texts = {
            "fi": "Emme ole Woltissa tai Foodorassa ‚Äì tilaukset noudetaan suoraan leipomolta tai voit l√§hett√§√§ kuljettajan hakemaan tilauksen.",
            "en": "We‚Äôre not on Wolt or Foodora; please pick up directly from the bakery or arrange your own courier.",
            "sv": "Vi finns inte p√• Wolt eller Foodora ‚Äì h√§mta i bageriet eller ordna egen kurir.",
        }
        return texts[ln]

    if _contains(qn, ["koulu", "p√§iv√§kod", "school", "daycare"]):
        texts = {
            "fi": "Meill√§ ei juuri nyt ole aktiivista yhteisty√∂t√§ koulujen tai p√§iv√§kotien kanssa, mutta kuulemme mielell√§mme ideoista ‚Äì laita viesti osoitteeseen rakaskotileipomo@gmail.com.",
            "en": "We‚Äôre not currently running a school or daycare program, but we‚Äôre happy to discuss ideas‚Äîdrop us a line at rakaskotileipomo@gmail.com.",
            "sv": "Vi har ingen aktivt samarbete med skolor eller daghem f√∂r tillf√§llet, men dela g√§rna dina id√©er via rakaskotileipomo@gmail.com.",
        }
        return texts[ln]

    if _contains(qn, ["sunnunt", "s√∂ndag", "sunday"]):
        texts = {
            "fi": "Olemme aina kiinni sunnuntaisin ‚Äì pid√§mme silloin lepop√§iv√§n.",
            "en": "We‚Äôre closed every Sunday ‚Äì that‚Äôs our day off.",
            "sv": "Vi h√•ller alltid st√§ngt p√• s√∂ndagar ‚Äì d√• har vi vilodag.",
        }
        return texts[ln]

    if _contains(qn, ["juhlapyh", "holiday", "poikkeus", "exception hours"]):
        texts = {
            "fi": "Ilmoitamme poikkeavat aukioloajat verkkosivuillamme ja Google-profiilissa. Kurkkaa sielt√§ ennen kuin l√§hdet.",
            "en": "Any holiday hours are posted on our website and Google listing‚Äîplease check there before visiting.",
            "sv": "Eventuella helg√∂ppettider publiceras p√• v√•r webbplats och Google-profil ‚Äì kika d√§r innan du kommer.",
        }
        return texts[ln]

    if _contains(qn, ["mihin aikaan", "milloin kannattaa", "juuri paistettu", "fresh" ]) and _contains(qn, ["piirakka", "piirak", "come", "tulla", "saapua", "komma"]):
        texts = {
            "fi": "Tuoreimmat piirakat l√∂ytyv√§t heti avauksen aikaan: to‚Äìpe klo 11 ja la klo 11. Ennakkotilauksen voi noutaa sovittuna aikana.",
            "en": "You‚Äôll find the freshest pies right at opening‚ÄîThu‚ÄìFri 11:00 and Sat 11:00. Preorders are ready at your agreed pickup time.",
            "sv": "De f√§rskaste pirogerna finns vid √∂ppning: tors‚Äìfre kl. 11 och l√∂r kl. 11. F√∂rbest√§llningar ligger klara den avtalade tiden.",
        }
        return texts[ln]

    if ln == "fi" and ("maks" in qn and "kort" in qn):
        return "Maksut vain kortilla, ja l√§hes kaikki kortit k√§yv√§t."

    if _contains(qn, ["custom cake", "tilauskakku", "tilaus kakku", "best√§llningst√•rta", "best√§llningst\u00e5rta", "best√§llningst\u00e5r", "t√•rta", "kakku"]) and _contains(qn, ["custom", "tilaus", "best√§ll"]):
        texts = {
            "fi": "Emme leivo kakkuja (t√§ytekakkuja, kuivakakkuja), voileip√§kakkuja, lihapiirakoita tai konditoriatuotteita. Olemme ensisijaisesti karjalanpiirakkaleipomo.",
            "en": "We don‚Äôt bake cakes (layer cakes, loaf cakes), sandwich cakes, meat pies, or confectionery items. We are primarily a Karelian pie bakery.",
            "sv": "Vi bakar inte t√•rtor (gr√§ddt√•rtor eller mjuka kakor), sm√∂rg√•st√•rtor, k√∂ttpiroger eller konditorivaror. Vi √§r i f√∂rsta hand ett karelskt pirogbageri.",
        }
        return texts[ln]

    if _contains(qn, ["pakaste", "pakast", "frozen", "djupfryst", "frysta"]):
        return _frozen_response(ln)

    if _contains(qn, ["s√§ily", "kuinka kauan", "how long", "hur l√§nge", "keep at home", "s√§ilyv√§t", "s√§ilyy", "kest" ]) and _contains(qn, ["piir", "pie", "piro"]):
        texts = {
            "fi": "Piirakkamme s√§ilyv√§t j√§√§kaapissa noin 2‚Äì3 p√§iv√§√§. Kaikki paistetut tuotteemme voi my√∂s pakastaa, jolloin ne s√§ilyv√§t noin kaksi kuukautta.",
            "en": "Our pies keep in the fridge for about 2‚Äì3 days. All of our baked products can also be frozen, and they keep for roughly two months in the freezer.",
            "sv": "V√•ra piroger h√•ller i kylsk√•p i cirka 2‚Äì3 dagar. Alla bakverk g√•r √§ven att frysa in och h√•ller d√• ungef√§r tv√• m√•nader i frysen.",
        }
        return texts[ln]

    if _contains(qn, ["osoit", "address", "adress", "where are you", "var ligger", "miss√§ sijaitsette", "miss√§ olette", "var finns"]):
        texts = {
            "fi": "Myym√§l√§mme sijaitsee Vallilassa osoitteessa Kumpulantie 15, 00520 Helsinki.",
            "en": "Our bakery is in Vallila at Kumpulantie 15, 00520 Helsinki.",
            "sv": "V√•r butik finns i Vallila p√• Kumpulantie 15, 00520 Helsingfors.",
        }
        return texts[ln]

    if _contains(qn, ["catering", "pitopalvel", "pitopalvelu", "juhlatilaus"]):
        texts = {
            "fi": "Otamme mielell√§mme isompiakin tilauksia juhliin ja tapahtumiin. L√§het√§ toiveesi ja aikataulusi s√§hk√∂postilla osoitteeseen rakaskotileipomo@gmail.com, niin suunnittelemme sopivan kokonaisuuden.",
            "en": "We‚Äôre happy to prepare larger orders for parties and events. Email your wishlist and timing to rakaskotileipomo@gmail.com and we‚Äôll plan the right selection.",
            "sv": "Vi bakar g√§rna st√∂rre m√§ngder till fester och evenemang. Mejla dina √∂nskem√•l och tidtabell till rakaskotileipomo@gmail.com s√• planerar vi en passande helhet.",
        }
        return texts[ln]

    if _contains(qn, ["samos"]) and _contains(qn, ["mauste", "maust", "spicy", "hot", "tul", "krydd"]):
        texts = {
            "fi": "Samosamme maustetaan kymmenill√§ intialaisilla mausteilla kuten juustokuminalla, korianterilla, kurkumalla, garam masalalla ja miedolla chilill√§. Ne ovat aromikkaita ja lempe√§n tulisia.",
            "en": "Our samosas are seasoned with a dozen Indian spices ‚Äì cumin, coriander, turmeric, garam masala and a mild chili, among others. They‚Äôre flavorful with a gentle heat.",
            "sv": "V√•ra samosor kryddas med ett tiotal indiska kryddor som spiskummin, koriander, gurkmeja, garam masala och mild chili. De √§r smakrika med mjuk hetta.",
        }
        return texts[ln]

    if _contains(qn, ["kardemumm", "cardamom"]):
        texts = {
            "fi": "K√§yt√§mme pullissa kokonaisia kardemumman siemeni√§, jotka jauhamme itse tuoreiksi juuri ennen taikinan valmistusta. Kardemumma tuodaan perheemme kautta Intiasta, joten aromi on erityisen raikas.",
            "en": "For our buns we use whole cardamom seeds that we grind ourselves right before mixing the dough. The cardamom is sourced from family growers in India, so the flavor stays intensely fresh.",
            "sv": "Till bullarna anv√§nder vi hela kardemummafr√∂n som vi mal sj√§lva precis innan degen blandas. Kardemumman kommer fr√•n v√•r familj i Indien, vilket ger en extra frisk och aromatisk smak.",
        }
        return texts[ln]

    if _contains(qn, ["allerg", "allerge"]):
        texts = {
            "fi": "Yleisimm√§t allergeenit joita k√§yt√§mme: maito, gluteeni (vehn√§/ruis/ohra) ja kananmuna. K√§sittelemme leipomossa viljaa ja maitotuotteita; ristikontaminaatiota ei voida t√§ysin poissulkea. Verkkokaupassa jokaisella tuotteella on allergiatiedot, ja voit my√∂s kysy√§ minulta yksitt√§isen tuotteen allergeeneista.",
            "en": "The main allergens we handle are milk, gluten (wheat/rye/barley) and egg. We work with flour and dairy in the bakery, so cross-contamination cannot be fully excluded. Each product in the online shop lists its allergens, and you can ask me about a specific item here as well.",
            "sv": "De vanligaste allergenerna vi anv√§nder √§r mj√∂lk, gluten (vete/r√•g/korn) och √§gg. Vi hanterar mj√∂l och mejeriprodukter i bageriet, s√• korskontaminering kan inte helt uteslutas. I webbutiken finns allergener f√∂r varje produkt och du kan fr√•ga mig om enskilda produkter h√§r.",
        }
        return texts[ln]

    if _contains(qn, ["toimit", "kuljet", "delivery", "deliver", "hemleverans", "hemleverera", "kotiin", "home delivery"]):
        texts = {
            "fi": "Kyll√§, tilaukset voi noutaa myym√§l√§st√§mme aukioloaikoina ‚Äì suuremmat er√§t onnistuvat my√∂s tiistaisin ja keskiviikkoisin sopimalla etuk√§teen. Emme tarjoa kotiinkuljetusta, mutta voit tilata taksin tai muun kuljetuspalvelun noutamaan tilauksen. Luovutamme tuotteet kuljettajalle ja l√§het√§mme tarvittaessa maksulinkin etuk√§teen, kun tilaus on vahvistettu.",
            "en": "Yes, you can pick up orders from our shop during opening hours ‚Äì larger batches can also be collected on Tuesdays and Wednesdays by arrangement. We don‚Äôt offer home delivery, but you can book a taxi or courier to collect your order. We hand everything to the driver and can send a payment link in advance once the order is confirmed.",
            "sv": "Ja, du kan h√§mta best√§llningar i v√•r butik under √∂ppettiderna ‚Äì st√∂rre satser kan √§ven h√§mtas tisdagar och onsdagar enligt √∂verenskommelse. Vi erbjuder ingen hemleverans, men du kan boka en taxi eller annan transport som h√§mtar best√§llningen. Vi l√§mnar √∂ver varorna till f√∂raren och kan skicka en betalningsl√§nk i f√∂rv√§g n√§r best√§llningen √§r bekr√§ftad.",
        }
        return texts[ln]

    if _contains(qn, ["kananmuna", "kananmun", "munaa", "munia", "egg"]):
        texts = {
            "fi": "Karjalanpiirakat ovat ilman kananmunaa, mutta pullat voitelemme ohuella kananmunapesulla ennen paistoa. Ennakkotilauksessa voimme j√§tt√§√§ munavoitelun pois, jos toivot.",
            "en": "Our Karelian pies are egg-free, but we brush the buns with a light egg wash before baking. In a preorder we can skip the egg wash if you prefer.",
            "sv": "V√•ra karelska piroger √§r utan √§gg, men bullarna penslas l√§tt med √§gg f√∂re gr√§ddning. Vid f√∂rbest√§llning kan vi hoppa √∂ver √§ggpenslingen om du vill.",
        }
        return texts[ln]

    if _contains(qn, ["samos"]) and _contains(qn, ["maito", "maitotuotte", "dairy", "mj√∂lk", "mjolk"]):
        texts = {
            "fi": "Vegaaninen gobi-samosa ei sis√§ll√§ maitotuotteita. Kana-samosassa k√§yt√§mme laktoositonta jogurttia marinadissa, joten siin√§ on maitoproteiinia.",
            "en": "The vegan gobi samosa contains no dairy. Our chicken samosa uses lactose-free yogurt in the marinade, so it does contain milk protein.",
            "sv": "Den veganska gobi-samosan inneh√•ller inga mejeriprodukter. Kycklingsamosan inneh√•ller laktosfri yoghurt i marinaden och har d√§rf√∂r mj√∂lkprotein.",
        }
        return texts[ln]

    if _contains(qn, ["s√§hk√∂post", "email"]) and _contains(qn, ["tilaa", "tilauk", "order"]):
        texts = {
            "fi": "Voit tehd√§ tilauksen my√∂s s√§hk√∂postilla ‚Äì l√§het√§ viesti osoitteeseen rakaskotileipomo@gmail.com ja kerro tuotteet, m√§√§r√§t ja noutoaika.",
            "en": "Yes, you can order by email: send the products, quantities and desired pickup time to rakaskotileipomo@gmail.com.",
            "sv": "Ja, du kan best√§lla via e-post ‚Äì skriv produkter, m√§ngder och √∂nskad avh√§mtning till rakaskotileipomo@gmail.com.",
        }
        return texts[ln]

    if _contains(qn, ["kuitt", "receipt"]) and _contains(qn, ["s√§hk√∂post", "email"]):
        texts = {
            "fi": "Verkkokauppa l√§hett√§√§ kuitin s√§hk√∂postiisi automaattisesti. Myym√§l√§st√§ saat paperikuitin ja pyynn√∂st√§ my√∂s PDF:n.",
            "en": "The online shop emails a receipt automatically. In-store we provide a paper receipt and can email a PDF if needed.",
            "sv": "Webbutiken mejlar kvittot automatiskt. I butiken f√•r du ett papperskvitto och vi kan mejla en PDF vid behov.",
        }
        return texts[ln]

    if _contains(qn, ["lahjakort", "gift card", "presentkort", "voucher"]):
        texts = {
            "fi": "Valitettavasti emme myy lahjakortteja.",
            "en": "Unfortunately we do not sell gift cards.",
            "sv": "Tyv√§rr s√§ljer vi inte presentkort.",
        }
        return texts[ln]

    if _contains(qn, ["t√§sm", "mihin aikaan", "milloin", "what time", "vilken tid", "kellon", "time", "voinko siirt", "kuinka my√∂h", "how late", "latest pickup", "latest time"]) and \
       _contains(qn, ["torst", "thursday", "torsdag"]) and \
       _contains(qn, ["nout", "pick up", "pickup", "h√§mt", "hamta", "h√§mta", "noutoon", "noutaa"]):
        texts = {
            "fi": "Torstaisin palvelemme klo 11‚Äì17. Nouda tilauksesi tuona aikav√§lin√§ leipomolta.",
            "en": "On Thursdays we‚Äôre open from 11:00 to 17:00‚Äîplease pick up your order within that window.",
            "sv": "P√• torsdagar har vi √∂ppet kl. 11‚Äì17. H√§mta din best√§llning inom det tidsintervallet.",
        }
        return texts[ln]

    if _contains(qn, ["t√§sm", "mihin aikaan", "milloin", "what time", "vilken tid", "kellon", "time", "voinko siirt", "kuinka my√∂h", "how late", "latest pickup", "latest time"]) and \
       _contains(qn, ["perjant", "friday", "fredag"]) and \
       _contains(qn, ["nout", "pick up", "pickup", "h√§mt", "hamta", "h√§mta", "noutoon", "noutaa"]):
        texts = {
            "fi": "Perjantaisin olemme avoinna klo 11‚Äì17, joten noudot tulee tehd√§ tuon aikav√§lin puitteissa.",
            "en": "On Fridays we‚Äôre open 11:00‚Äì17:00, so please plan your pickup within those hours.",
            "sv": "P√• fredagar har vi √∂ppet kl. 11‚Äì17 ‚Äì h√§mta best√§llningen under den tiden.",
        }
        return texts[ln]

    if _contains(qn, ["t√§sm", "mihin aikaan", "milloin", "what time", "vilken tid", "kellon", "time", "voinko siirt", "kuinka my√∂h", "how late", "latest pickup", "latest time"]) and \
       _contains(qn, ["lauant", "saturday", "l√∂rdag", "lordag"]) and \
       _contains(qn, ["nout", "pick up", "pickup", "h√§mt", "hamta", "h√§mta", "noutoon", "noutaa"]):
        texts = {
            "fi": "Lauantaisin palvelemme klo 11‚Äì15, joten noudot tulee tehd√§ viimeist√§√§n klo 15 menness√§.",
            "en": "On Saturdays we‚Äôre open 11:00‚Äì15:00, so make sure to pick up before 15:00.",
            "sv": "P√• l√∂rdagar har vi √∂ppet kl. 11‚Äì15, s√• h√§mta din best√§llning f√∂re kl. 15.",
        }
        return texts[ln]

    if _contains(qn, ["siirt", "my√∂h", "parilla tunnilla", "pari tunt", "couple hours", "couple of hours", "later", "delay", "shift", "move", "push", "resched"]) and _contains(qn, ["nout", "pick up", "pickup", "h√§mt", "hamta", "h√§mta"]):
        texts = {
            "fi": "Voit siirt√§√§ noudon samalle p√§iv√§lle, kunhan ehdit ennen sulkemista: to‚Äìpe klo 11‚Äì17 ja la klo 11‚Äì15. Jos aikataulu muuttuu paljon, laitathan meille viestin osoitteeseen rakaskotileipomo@gmail.com.",
            "en": "You can shift the pickup later the same day as long as you arrive before closing: Thu‚ÄìFri 11:00‚Äì17:00 and Sat 11:00‚Äì15:00. If the timing changes more, please email us at rakaskotileipomo@gmail.com.",
            "sv": "Du kan flytta upph√§mtningen samma dag s√• l√§nge du kommer f√∂re st√§ngning: tors‚Äìfre kl. 11‚Äì17 och l√∂r kl. 11‚Äì15. Om tiden √§ndras mer, mejla oss g√§rna p√• rakaskotileipomo@gmail.com.",
        }
        return texts[ln]

    if _contains(qn, ["k√§te", "cash", "kontant", "kontanter", "k√§teis", "k√§teisell√§"]) or \
       (_contains(qn, ["maksu", "maksaa", "pay", "payment"]) and _contains(qn, ["k√§te", "cash", "kontant"])):
        texts = {
            "fi": "Hyv√§ksymme yleisimm√§t pankki- ja luottokortit l√§himaksulla. Emme hyv√§ksy MobilePayta, k√§teist√§ tai shekkej√§.",
            "en": "We accept major debit and credit cards with contactless. We do not accept MobilePay, cash or checks.",
            "sv": "Vi accepterar ledande debit- och kreditkort med kontaktl√∂s betalning. Vi accepterar inte MobilePay, kontanter eller checkar.",
        }
        return texts[ln]

    if _contains(qn, ["muutta", "muokata", "peru", "perua", "cancel", "change", "avboka", "√§ndra"]) and _contains(qn, ["tilaus", "tilauk", "order", "best√§llning", "bestallning", "bestall", "order"]):
        texts = {
            "fi": (
                "Jos haluat muuttaa tai perua tilauksen, l√§het√§ s√§hk√∂postia osoitteeseen rakaskotileipomo@gmail.com mahdollisimman pian."
                " Kun leivonta on alkanut, emme aina pysty tekem√§√§n muutoksia."
            ),
            "en": (
                "To modify or cancel an order, please email rakaskotileipomo@gmail.com as soon as possible."
                " Once we begin baking, changes may no longer be possible."
            ),
            "sv": (
                "Beh√∂ver du √§ndra eller avboka en best√§llning? Mejla oss snarast p√• rakaskotileipomo@gmail.com."
                " N√§r bakningen v√§l har startat kan √§ndringar vara sv√•ra."
            ),
        }
        return texts[ln]

    if _contains(qn, ["kuinka iso", "suurin", "largest", "how big"]) and _contains(qn, ["tilaus", "order"]):
        texts = {
            "fi": "Voimme paistaa useita satoja piirakoita kerralla ‚Äì kerro m√§√§r√§ ja noutoaika s√§hk√∂postilla, niin vahvistamme aikataulun.",
            "en": "We can bake several hundred pies in one batch. Email your quantity and pickup time and we‚Äôll confirm the schedule.",
            "sv": "Vi kan gr√§dda flera hundra piroger √•t g√•ngen. Mejla m√§ngd och avh√§mtningstid s√• bekr√§ftar vi planeringen.",
        }
        return texts[ln]

    if _contains(qn, ["tapahtum", "event"]) and _contains(qn, ["yhteisty", "collab", "partner"]):
        texts = {
            "fi": "Teemme mielell√§mme yhteisty√∂t√§ tapahtumien kanssa ‚Äì l√§het√§ tapahtuman tiedot osoitteeseen rakaskotileipomo@gmail.com.",
            "en": "We‚Äôre open to event collaborations‚Äîemail the details to rakaskotileipomo@gmail.com.",
            "sv": "Vi samarbetar g√§rna med evenemang ‚Äì skicka detaljerna till rakaskotileipomo@gmail.com.",
        }
        return texts[ln]

    if _contains(qn, ["minimitilaus", "minimum order", "minsta best√§llning"]) and _contains(qn, ["koti", "delivery", "kuljetus"]):
        texts = {
            "fi": "Emme tarjoa kotiinkuljetusta, joten minimitilaus koskee vain noutoja myym√§l√§st√§.",
            "en": "We don‚Äôt have home delivery, so there‚Äôs no delivery minimum‚Äîorders are always picked up in store.",
            "sv": "Vi erbjuder ingen hemleverans, s√• det finns ingen minimiorder f√∂r leverans ‚Äì allt h√§mtas i butiken.",
        }
        return texts[ln]

    if _contains(qn, ["muutama", "pari", "only a few", "small order"]):
        texts = {
            "fi": "Voit hyvin ostaa vain muutaman tuotteen ‚Äì mit√§√§n minimitilausta ei ole noudettaessa.",
            "en": "Yes, feel free to order just a few pieces‚Äîthere‚Äôs no minimum when you pick up.",
            "sv": "Ja, du kan best√§lla bara n√•gra f√• produkter ‚Äì det finns ingen minimiorder vid avh√§mtning.",
        }
        return texts[ln]

    if _contains(qn, ["raakapakaste", "raw-frozen", "par-baked"]) and _contains(qn, ["tilaa", "order", "ostaa"]):
        texts = {
            "fi": "Raakapakasteet l√∂yd√§t verkkokaupastamme ‚Äì valitse pakkauskoko (10 tai 20 kpl) ja nouda aukioloaikoina.",
            "en": "You can order the raw-frozen items in our online shop‚Äîchoose a 10 or 20 piece pack and pick up during opening hours.",
            "sv": "Best√§ll r√•frysta produkter i webbutiken ‚Äì v√§lj 10- eller 20-pack och h√§mta under √∂ppettiderna.",
        }
        return texts[ln]

    return None


def _is_product_inquiry(query: str, lang: str) -> bool:
    qn = normalize(query)
    toks = set(tokens(query))
    # Negative guards: gift card queries should NOT be treated as product overview
    neg = {"lahjakortti", "lahjakortteja", "gift card", "gift cards", "presentkort"}
    if any(k in qn for k in neg) or (toks & neg):
        return False

    # If the question is about dietary filters or seasonal/special items, defer to specific answers
    exclusions = {
        "vegaan", "vegansk", "vegan",
        "maidot", "mj√∂lkfri", "dairy", "milk-free", "milk free",
        "laktoos", "laktos",
        "gluteen", "gluten",
        "kausi", "seson", "season",
        "erikoistarj", "special offer", "specials",
        "valmisseos", "premix", "mix", "alusta asti", "from scratch", "ennakkomaks", "lahjoit", "h√§vikk", "haavik",
    }
    if any(term in qn for term in exclusions):
        return False

    if lang == "fi":
        menu_terms = {
            # menu/selection/product nouns
            "menu", "ruokalista", "valikoima", "valikoimassa",
            "tuote", "tuotte", "tuotteet", "tuotteita", "tuotteit", "tuotteiden",
            "leivonnainen", "leivonnaiset", "leivonnaisia",
            # concrete product names
            "karjalanpiirakka", "piirakka", "samosa", "curry", "twist", "pull", "mustikkakukko",
        }
        verb_hints = {"myytte", "myyttek√∂", "myyd√§", "myyk√∂", "leipoa", "leivo", "leivot", "leivotte", "leivomme"}
        # Require either a menu/product noun, or a verb plus a generic noun
        if (toks & menu_terms) or any(k in qn for k in menu_terms):
            return True
        if (toks & verb_hints) and ("tuote" in qn or "tuotte" in qn or "leivonnai" in qn or "leivo" in qn):
            return True
        # Special phrasing
        if "mit√§ te leivotte" in qn or "mit√§ tuotteita" in qn:
            return True
        return False
    if lang == "sv":
        menu_terms = {"meny", "sortiment", "produkt", "produkter", "bakverk", "pirog", "piroger", "samosa", "curry", "twist", "bulle", "mustikkakukko"}
        if (toks & menu_terms) or any(k in qn for k in menu_terms):
            return True
        return False
    # en
    menu_terms = {"menu", "selection", "product", "products", "pastry", "pastries", "pie", "pies", "karelian", "samosa", "curry", "twist", "bun", "blueberry pie", "mustikkakukko"}
    if (toks & menu_terms) or any(k in qn for k in menu_terms):
        return True
    return False


def _compose_products_overview(lang: str) -> str:
    if lang == "sv":
        body = (
            "V√•r huvudprodukt √§r karelska piroger med 100 % r√•gskal. "
            "P√• den salta sidan har vi indiska bakverk som samosor och mungcurry-twists. "
            "Bland de s√∂ta alternativen finns finska bullar och bl√•b√§rspaj (mustikkakukko). "
            "Vi bakar inte t√•rtor, sm√∂rg√•st√•rtor eller andra konditorivaror."
        )
        return f"{body}\n{_suggest_menu_block(lang)}"
    if lang == "en":
        body = (
            "Our signature product is the Karelian pie with a 100% rye crust. "
            "Savory options include Indian pastries like samosas and mung curry twists. "
            "For sweets we bake Finnish buns and blueberry pie (mustikkakukko). "
            "We don‚Äôt bake cakes, sandwich cakes or other confectionery."
        )
        return f"{body}\n{_suggest_menu_block(lang)}"
    # fi default
    body = (
        "P√§√§tuotteemme on 100 % rukiisella kuorella leivottu karjalanpiirakka. "
        "Suolaiselta puolelta l√∂ytyy my√∂s intialaisia leivonnaisia kuten samosat ja mungcurry-twistit. "
        "Makeista tarjoamme suomalaisia pullia ja mustikkakukkoa. "
        "Emme leivo t√§yte- tai voileip√§kakkuja emmek√§ muita konditoriatuotteita."
    )
    return f"{body}\n{_suggest_menu_block(lang)}"


def _extract_answer_text(doc: Doc, query_norm: str | None = None) -> Tuple[str, str]:
    text = doc.text or ""
    if "\n" in text:
        q_part, a_part = text.split("\n", 1)
    else:
        q_part, a_part = text, ""
    q_part = q_part.strip()
    if q_part.lower().startswith("q:"):
        q_clean = q_part[2:].strip()
    else:
        q_clean = q_part
    a_clean = a_part
    if a_clean.lower().startswith("a:"):
        a_clean = a_clean[2:].strip()
    else:
        a_clean = a_clean.strip()
    return q_clean, a_clean


def compose_answer(query: str, hits: List[Tuple[float, Doc]], lang: str) -> str:
    special = _special_answer(query, lang)
    if special:
        return special

    if not hits:
        if lang == "fi":
            return "En ole varma. Voitko t√§sment√§√§ kysymyst√§?"
        if lang == "sv":
            return "Jag √§r inte s√§ker. Kan du precisera fr√•gan?"
        return "I‚Äôm not sure. Could you clarify your question?"

    # Prefer an exact FAQ match if present
    qn = normalize(query)
    for _, d in hits:
        dq, da = _extract_answer_text(d)
        if normalize(dq) == qn:
            if da:
                return da

    # Enforce preferred ordering for product/menu inquiries
    if _is_product_inquiry(query, lang):
        return _compose_products_overview(lang)

    # Default: use the first good FAQ-like snippet
    top = hits[:3]
    for _, d in top:
        _, txt = _extract_answer_text(d)
        if txt:
            return txt
    # Fallback to any snippet/meta
    d0 = top[0][1]
    return d0.meta.get("snippet") or d0.meta.get("summary") or d0.meta.get("source") or d0.id
